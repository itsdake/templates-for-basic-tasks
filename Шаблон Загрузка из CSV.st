{1,
{3,
{"Загрузка из CSV",1,0,"",""},
{0,
{"НачалоВыбораФайла_CSV",0,1,"","&НаКлиенте
Процедура ФайлНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	// Создание диалога выбора файла
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	//Установка параметров для выбора файла
	
	ДиалогОткрытияФайла.ПолноеИмяФайла  = """"; //Начальное значение Пути к файлу - пустое
	ДиалогОткрытияФайла.Фильтр = ""Текстовые документы(*.csv) |*.csv""; // Указываем фильтр для файлов только с расширением .csv
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь; // Запрещаем множественный выбор файлов
	ДиалогОткрытияФайла.Заголовок = ""Выберите файл""; // Заголовок окна выбора файла  
	// Если пользователь выбрал файл
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Объект.<?""Имя реквизита с полным именем файла""> = ДиалогОткрытияФайла.ПолноеИмяФайла; // Записываем полный путь к выбранному файлу
	Иначе 
		Сообщить(""Файл не выбран!""); // Если файл не выбран, выводим предупреждение 
	КонецЕсли;
КонецПроцедуры
"}
},
{0,
{"ЗагрузкаДанныхИз_CSV(Команда)",0,1,"","&НаКлиенте
Процедура ЗагрузкаДанных(Команда)
	
	Док = Новый ТекстовыйДокумент; // Создание объекта ТекстовыйДокумент для работы с содержимым текстового файла
	Док.Прочитать(Объект.<?""Имя реквизита с полным именем файла"">); // Чтение содержимого файла по указанному пути  
	
	// Цикл для обработки каждой строки, начиная со второй строки (в первой строке - заголовки столбцов)
	Для НомерСтроки = <?""Начальный номер строки в файле с данными""> По Док.КоличествоСтрок() Цикл
		ТекущаяСтрока = Док.ПолучитьСтроку(НомерСтроки);
		ДанныеТекущейСтроки = СтрРазделить(ТекущаяСтрока,""<?""Символ-разделитель"">""); // Разделяем строку по разделителю "","" и получаем массив данных
		ЗагрузитьДанныеНаСервере(ДанныеТекущейСтроки); // Передаем данные на сервер для записи в Справочник
	КонецЦикла;
	
КонецПроцедуры "}
},
{0,
{"ЗагрузитьДанныеНаСервере(CSV)",0,1,"","&НаСервере
Процедура ЗагрузитьДанныеНаСервере(ДанныеТекущейСтроки)
	
	// Проверяем, существует ли в справочнике элемент с таким же Наименованием
	Если Справочники.<?""Имя справочника"">.НайтиПоНаименованию(СокрЛП(ДанныеТекущейСтроки[<?""Номер столбца Наименование"">])) = Справочники.<?""Имя справочника"">.ПустаяСсылка()	
		Тогда 
		НовыйЭлемент = Справочники.<?""Имя справочника"">.СоздатьЭлемент();	// создаем новый элемент справочника Сотрудники 
		//Заполняем реквизит Наименование нового элемента
		НовыйЭлемент.Наименование = СокрЛП(ДанныеТекущейСтроки[<?""Номер столбца Наименование"">]);
		//Заполняем реквизиты нового элемента строкового типа данных
		НовыйЭлемент.<?""Имя реквизита1""> = СокрЛП(ДанныеТекущейСтроки[<?""Номер столбца Реквизита1"">]); 
		//Заполнение реквизита ссылочного типа данных
		Если Справочники.<?""Имя справочника Ссылка"">.НайтиПоНаименованию(СокрЛП(ДанныеТекущейСтроки[<?""Номер столбца Реквизита ссылочного типа"">])) = Справочники.<?""Имя справочника Ссылка"">.ПустаяСсылка()	
		Тогда 
        НоваяЭлемент1 = Справочники.<?""Имя справочника Ссылка"">.СоздатьЭлемент();
		НоваяЭлемент1.Наименование = СокрЛП(ДанныеТекущейСтроки[<?""Номер столбца Реквизита ссылочного типа"">]);
		НоваяЭлемент1.Записать();
		КонецЕсли;
	    НовыйЭлемент.<?""Имя реквизита ссылочного типа""> =  Справочники.<?""Имя справочника Ссылка"">.НайтиПоНаименованию(СокрЛП(ДанныеТекущейСтроки[<?""Номер столбца Реквизита ссылочного типа"">]));
 
		//........
		//Далее аналогично добавить необходимое количество реквизитов в справочник 
		//........
		НовыйЭлемент.Записать(); //Записываем элемент в справочник  
		Сообщить(""В справочник добавлен новый элемент "" +НовыйЭлемент.Наименование); 
	КонецЕсли;
КонецПроцедуры"}
}
}
}